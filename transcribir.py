import sounddevice as sd
from scipy.io.wavfile import write
import whisper

# ====== CONFIGURACIÃ“N ======
duracion = 5  # duraciÃ³n en segundos de la grabaciÃ³n
archivo_salida = "grabacion.wav"

'''

Modelo	PrecisiÃ³n	Velocidad
tiny	Baja	    Muy rÃ¡pida
base	Media	    RÃ¡pida
small	Buena	    Media
medium	Muy buena	Lenta
large	Excelente	MÃ¡s lenta

'''


# ====== GRABAR AUDIO ======
print("ðŸŽ¤ Comienza a hablar... (grabando por", duracion, "segundos)")
fs = 16000  # frecuencia de muestreo (16kHz recomendado para Whisper)
audio = sd.rec(int(duracion * fs), samplerate=fs, channels=1)
sd.wait()  # espera a que termine la grabaciÃ³n
write(archivo_salida, fs, audio)
print("âœ… GrabaciÃ³n finalizada y guardada como", archivo_salida)

# ====== TRANSCRIPCION 1 ======
print("--------------\n")
print("ðŸ§  Transcribiendo... TINY")
model = whisper.load_model("tiny", device="cuda")  
result = model.transcribe(archivo_salida, language="es")
print("ðŸ“„ TranscripciÃ³n: TINY")
print(result["text"])

# ====== TRANSCRIPCION 2 ======
print("--------------\n")
print("ðŸ§  Transcribiendo... BASE")
model = whisper.load_model("base", device="cuda")  
result = model.transcribe(archivo_salida, language="es")
print("ðŸ“„ TranscripciÃ³n: BASE")
print(result["text"])


# ====== TRANSCRIPCION 3 ======
print("--------------\n")
print("ðŸ§  Transcribiendo... SMALL") 
model = whisper.load_model("small", device="cuda")  
result = model.transcribe(archivo_salida, language="es")
print("ðŸ“„ TranscripciÃ³n: SMALL")
print(result["text"])
print("--------------\n")

